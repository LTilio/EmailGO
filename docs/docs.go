// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/campaigns": {
            "post": {
                "description": "Cria uma nova campanha de envio de emails",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "campaigns"
                ],
                "summary": "Criar nova campanha",
                "parameters": [
                    {
                        "description": "Dados da nova campanha",
                        "name": "campaign",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/contract.NewCampaignRequest"
                        }
                    },
                    {
                        "type": "string",
                        "description": "Bearer {token}",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Campanha criada",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Requisição inválida",
                        "schema": {
                            "$ref": "#/definitions/internalerror.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Erro interno",
                        "schema": {
                            "$ref": "#/definitions/internalerror.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/campaigns/{id}": {
            "get": {
                "description": "Recupera os detalhes de uma campanha com base no ID fornecido",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "campaigns"
                ],
                "summary": "Obter campanha por ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID da campanha",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Bearer {token}",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Detalhes da campanha",
                        "schema": {
                            "$ref": "#/definitions/contract.CampaignResponse"
                        }
                    },
                    "401": {
                        "description": "Não autorizado",
                        "schema": {
                            "$ref": "#/definitions/internalerror.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Campanha não encontrada",
                        "schema": {
                            "$ref": "#/definitions/internalerror.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Erro interno",
                        "schema": {
                            "$ref": "#/definitions/internalerror.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Remove uma campanha com base no ID fornecido",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "campaigns"
                ],
                "summary": "Deletar campanha por ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID da campanha",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Bearer {token}",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Mensagem de sucesso",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "401": {
                        "description": "Não autorizado",
                        "schema": {
                            "$ref": "#/definitions/internalerror.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Campanha não encontrada",
                        "schema": {
                            "$ref": "#/definitions/internalerror.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Erro interno",
                        "schema": {
                            "$ref": "#/definitions/internalerror.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/campaigns/{id}/start": {
            "patch": {
                "description": "Altera o status da campanha para \"Iniciada\" com base no ID fornecido",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "campaigns"
                ],
                "summary": "Iniciar campanha",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID da campanha",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Bearer {token}",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Campanha iniciada com sucesso",
                        "schema": {
                            "$ref": "#/definitions/contract.CampaignResponse"
                        }
                    },
                    "401": {
                        "description": "Não autorizado",
                        "schema": {
                            "$ref": "#/definitions/internalerror.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Campanha não encontrada",
                        "schema": {
                            "$ref": "#/definitions/internalerror.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Erro interno",
                        "schema": {
                            "$ref": "#/definitions/internalerror.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/login": {
            "post": {
                "description": "Realiza o login do usuário e retorna um token de acesso para autenticação.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Autenticar usuário",
                "parameters": [
                    {
                        "description": "Credenciais de Login",
                        "name": "login",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/endpoints.LoginRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Token de Acesso",
                        "schema": {
                            "$ref": "#/definitions/endpoints.TokenResponse"
                        }
                    },
                    "400": {
                        "description": "Requisição inválida",
                        "schema": {
                            "$ref": "#/definitions/internalerror.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Credenciais inválidas",
                        "schema": {
                            "$ref": "#/definitions/internalerror.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Erro interno",
                        "schema": {
                            "$ref": "#/definitions/internalerror.ErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "contract.CampaignResponse": {
            "type": "object",
            "properties": {
                "amount_of_emails": {
                    "type": "integer"
                },
                "content": {
                    "type": "string"
                },
                "created_by": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "contract.NewCampaignRequest": {
            "type": "object",
            "properties": {
                "content": {
                    "type": "string"
                },
                "createdBy": {
                    "type": "string"
                },
                "emails": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "endpoints.LoginRequest": {
            "type": "object",
            "properties": {
                "password": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "endpoints.TokenResponse": {
            "type": "object",
            "properties": {
                "access_token": {
                    "type": "string"
                }
            }
        },
        "internalerror.ErrorResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string",
                    "example": "invalid request"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:3000",
	BasePath:         "/",
	Schemes:          []string{},
	Title:            "EmailGo",
	Description:      "API para envio de emails em massa.",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
